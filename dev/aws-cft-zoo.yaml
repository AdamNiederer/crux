Parameters:
  SSHKeyPair:
    Type: String
  VPC:
    Type: String
  RouteTable:
    Type: String
  UserDataURL:
    Type: String
Resources:
  ZooSG:
    Type: 'AWS::EC2::SecurityGroup'
    Properties:
      GroupName: ZooSG
      GroupDescription: 'Accept requests for Zookeeper, SSH, and ping'
      SecurityGroupIngress:
        - Description: ping
          IpProtocol: icmp
          CidrIp: 0.0.0.0/0
          FromPort: '8'
          ToPort: '-1'
        - Description: SSH
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '22'
          ToPort: '22'
        - Description: Zookeeper
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '2181'
          ToPort: '2181'
        - Description: Zookeeper (connect to leader)
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '2888'
          ToPort: '2888'
        - Description: Zookeeper (leader election)
          IpProtocol: tcp
          CidrIp: 0.0.0.0/0
          FromPort: '3888'
          ToPort: '3888'
      VpcId: !Ref VPC
  ZooSN1:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select
        - 0
        - !GetAZs
      CidrBlock: 10.0.0.0/20
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  ZooSN2:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select
        - 1
        - !GetAZs
      CidrBlock: 10.0.16.0/20
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  ZooSN3:
    Type: 'AWS::EC2::Subnet'
    Properties:
      AvailabilityZone: !Select
        - 2
        - !GetAZs
      CidrBlock: 10.0.32.0/20
      MapPublicIpOnLaunch: true
      VpcId: !Ref VPC
  ZooRTA1:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref ZooSN1
      RouteTableId: !Ref RouteTable
  ZooRTA2:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref ZooSN2
      RouteTableId: !Ref RouteTable
  ZooRTA3:
    Type: 'AWS::EC2::SubnetRouteTableAssociation'
    Properties:
      SubnetId: !Ref ZooSN3
      RouteTableId: !Ref RouteTable
  ZooNI1:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      GroupSet:
        - !Ref ZooSG
      PrivateIpAddress: 10.0.0.11
      SubnetId: !Ref ZooSN1
  ZooNI2:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      GroupSet:
        - !Ref ZooSG
      PrivateIpAddress: 10.0.0.12
      SubnetId: !Ref ZooSN1
  ZooNI3:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      GroupSet:
        - !Ref ZooSG
      PrivateIpAddress: 10.0.16.11
      SubnetId: !Ref ZooSN2
  ZooNI4:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      GroupSet:
        - !Ref ZooSG
      PrivateIpAddress: 10.0.16.12
      SubnetId: !Ref ZooSN2
  ZooNI5:
    Type: 'AWS::EC2::NetworkInterface'
    Properties:
      GroupSet:
        - !Ref ZooSG
      PrivateIpAddress: 10.0.32.11
      SubnetId: !Ref ZooSN3
  ZooBox1:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-a36f8dc4
      InstanceType: t2.small
      KeyName: !Ref SSHKeyPair
      NetworkInterfaces:
        - DeleteOnTermination: false
          DeviceIndex: '0'
          NetworkInterfaceId: !Ref ZooNI1
      Tags:
        - Key: Name
          Value: ZooBox1
      UserData:
        Fn::Base64: !Sub |
          #!bin/bash
          wget ${UserDataURL}
          chmod +x aws-userdata-zoobox.sh
          ./aws-userdata-zoobox.sh 1
          rm aws-userdata-zoobox.sh
  ZooBox2:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-a36f8dc4
      InstanceType: t2.small
      KeyName: !Ref SSHKeyPair
      NetworkInterfaces:
        - DeleteOnTermination: false
          DeviceIndex: '0'
          NetworkInterfaceId: !Ref ZooNI2
      Tags:
        - Key: Name
          Value: ZooBox2
      UserData:
        Fn::Base64: !Sub |
          #!bin/bash
          wget ${UserDataURL}
          chmod +x aws-userdata-zoobox.sh
          ./aws-userdata-zoobox.sh 2
          rm aws-userdata-zoobox.sh
  ZooBox3:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-a36f8dc4
      InstanceType: t2.small
      KeyName: !Ref SSHKeyPair
      NetworkInterfaces:
        - DeleteOnTermination: false
          DeviceIndex: '0'
          NetworkInterfaceId: !Ref ZooNI3
      Tags:
        - Key: Name
          Value: ZooBox3
      UserData:
        Fn::Base64: !Sub |
          #!bin/bash
          wget ${UserDataURL}
          chmod +x aws-userdata-zoobox.sh
          ./aws-userdata-zoobox.sh 3
          rm aws-userdata-zoobox.sh
  ZooBox4:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-a36f8dc4
      InstanceType: t2.small
      KeyName: !Ref SSHKeyPair
      NetworkInterfaces:
        - DeleteOnTermination: false
          DeviceIndex: '0'
          NetworkInterfaceId: !Ref ZooNI4
      Tags:
        - Key: Name
          Value: ZooBox4
      UserData:
        Fn::Base64: !Sub |
          #!bin/bash
          wget ${UserDataURL}
          chmod +x aws-userdata-zoobox.sh
          ./aws-userdata-zoobox.sh 4
          rm aws-userdata-zoobox.sh
  ZooBox5:
    Type: 'AWS::EC2::Instance'
    Properties:
      ImageId: ami-a36f8dc4
      InstanceType: t2.small
      KeyName: !Ref SSHKeyPair
      NetworkInterfaces:
        - DeleteOnTermination: false
          DeviceIndex: '0'
          NetworkInterfaceId: !Ref ZooNI5
      Tags:
        - Key: Name
          Value: ZooBox5
      UserData:
        Fn::Base64: !Sub |
          #!bin/bash
          wget ${UserDataURL}
          chmod +x aws-userdata-zoobox.sh
          ./aws-userdata-zoobox.sh 5
          rm aws-userdata-zoobox.sh
